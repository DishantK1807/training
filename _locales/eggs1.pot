# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 20:23-0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../eggs1.rst:2
msgid "Creating addons to customize Plone"
msgstr ""

#: ../eggs1.rst:0
msgid "Get the code!"
msgstr ""

#: ../eggs1.rst:6
msgid "Get the code for this chapter (:doc:`More info <sneak>`) using this command in the buildout-directory:"
msgstr ""

#: ../eggs1.rst:13
msgid "Using zopeskel to create an egg"
msgstr ""

#: ../eggs1.rst:15
msgid "Our own code has to be organized as an egg. An egg is a zip file or a directory that follows certain conventions. We are going to use `ZopeSkel <https://pypi.python.org/pypi/ZopeSkel>`_ to create a skeleton project. We only need to fill the holes."
msgstr ""

#: ../eggs1.rst:19
msgid "In the current version of the training we use ZopeSkel 2.21.2 to create eggs. We do this because it is shipped with Plone's Unified Installer. In the future and in our own projects we use `bobtemplates.plone <https://pypi.python.org/pypi/bobtemplates.plone>`_ to create eggs.  This will also be the standard with Plone 5."
msgstr ""

#: ../eggs1.rst:21
msgid "We enter the ``src`` directory and call a script called ``zopeskel`` from our projects bin-directory."
msgstr ""

#: ../eggs1.rst:29
msgid "This returns a list of available templates we might use. We choose dexterity since it is pretty small but already has some of the right dependencies we need."
msgstr ""

#: ../eggs1.rst:35
msgid "We answer some questions:"
msgstr ""

#: ../eggs1.rst:37
msgid "Enter project name: ``ploneconf.site``"
msgstr ""

#: ../eggs1.rst:38
msgid "Expert Mode? (What question mode would you like? (easy/expert/all)?) ['easy']: ``easy``"
msgstr ""

#: ../eggs1.rst:39
msgid "Version (Version number for project) ['1.0']: ``1.0.0``"
msgstr ""

#: ../eggs1.rst:40
msgid "Description (One-line description of the project) ['Example Dexterity Product']: ``PloneConf Site``"
msgstr ""

#: ../eggs1.rst:41
msgid "Grok-Based? (True/False: Use grok conventions to simplify coding?) [True]: ``False``"
msgstr ""

#: ../eggs1.rst:42
msgid "Use relations? (True/False: include support for relations?) [False]: ``True``"
msgstr ""

#: ../eggs1.rst:46
msgid "If this is your first egg, this is a very special moment. We are going to create the egg with a script that generates a lot of necessary files. They all are necessary, but sometimes in a subtle way. It takes a while do understand their full meaning. Only last year I learnt and understood why I should have a ``manifest.in`` file. You can get along without one, but trust me, you get along better with a proper manifest file."
msgstr ""

#: ../eggs1.rst:49
msgid "Inspecting the package"
msgstr ""

#: ../eggs1.rst:51
msgid "Let's have a look at some of it's files."
msgstr ""

#: ../eggs1.rst:54
msgid "bootstrap.py, buildout.cfg, plone.cfg"
msgstr ""

#: ../eggs1.rst:54
msgid "You can ignore these files for now. They are here to create a buildout only for this egg to make testing easier. Once we start writing tests for this package we will have to update these files to the current best-practices and versions."
msgstr ""

#: ../eggs1.rst:57
msgid "docs, README.txt"
msgstr ""

#: ../eggs1.rst:57
msgid "The documentation and changelog of your egg goes in there"
msgstr ""

#: ../eggs1.rst:60
msgid "setup.py"
msgstr ""

#: ../eggs1.rst:60
msgid "This file configures the package, it's name, dependencies and some metadata like the authors name. The dependencies listed here are automatically added by buildout."
msgstr ""

#: ../eggs1.rst:63
msgid "ploneconf/site/configure.zcml"
msgstr ""

#: ../eggs1.rst:63
msgid "The phone-book of the packages. By reading it you can find out which functionality is registered though the component architecture."
msgstr ""

#: ../eggs1.rst:66
msgid "ploneconf/site/locales/"
msgstr ""

#: ../eggs1.rst:66
msgid "This holds translation-files (see http://docs.plone.org/develop/plone/i18n/internationalisation.html). We won't use it during the training."
msgstr ""

#: ../eggs1.rst:69
msgid "ploneconf/site/resources/"
msgstr ""

#: ../eggs1.rst:69
msgid "A directory that holds static resources (images/css/js). They are accessible through URLs like ``++resource++ploneconf.site/myawesome.css``"
msgstr ""

#: ../eggs1.rst:72
msgid "ploneconf/site/profiles/default/"
msgstr ""

#: ../eggs1.rst:72
msgid "The folder contains the GenericSetup-profile. During the training will put some xml-files there that hold configuration for the site."
msgstr ""

#: ../eggs1.rst:77
msgid "ploneconf/site/profiles/default/metadata.xml"
msgstr ""

#: ../eggs1.rst:75
msgid "Version-number and dependencies that are auto-installed."
msgstr ""

#: ../eggs1.rst:77
msgid "We could replace ``<dependency>profile-plone.app.dexterity:default</dependency>`` with ``<dependency>profile-plone.app.contenttypes:plone-content</dependency>`` to depend the addon we picked when creating our site with this egg."
msgstr ""

#: ../eggs1.rst:80
msgid "ploneconf/site/profiles/default/types.xml"
msgstr ""

#: ../eggs1.rst:80
msgid "Registration of types"
msgstr ""

#: ../eggs1.rst:82
msgid "There are also some files that can be deleted because they use outdated approaches to testing: ``ploneconf/site/tests.py`` and ``ploneconf/site/INTEGRATION.txt``."
msgstr ""

#: ../eggs1.rst:86
msgid "Including the egg in Plone"
msgstr ""

#: ../eggs1.rst:88
msgid "Before we can use our new addon we have to tell Plone about it. Edit ``buildout.cfg`` and uncomment ``ploneconf.site`` in the `eggs` and `sources` sections:"
msgstr ""

#: ../eggs1.rst:106
msgid "This tells Buildout to add the egg ``ploneconf.site``. Since it is also in the `sources`-section Buildout will not try to download it from pypi but will expect it in ``src/ploneconf.site``. *fs* allows you to add packages on the file system without a version control system, or with an unsupported one."
msgstr ""

#: ../eggs1.rst:108
msgid "Now run buildout to reconfigure Plone with the updated configuration:"
msgstr ""

#: ../eggs1.rst:114
msgid "After restarting Plone with ``./bin/instance fg`` the new addon `ploneconf.site` is available for install like PloneFormGen or Plone True Gallery."
msgstr ""

#: ../eggs1.rst:116
msgid "We will not install it now since we did not add any of our own code or configuration yet. Let's do that."
msgstr ""

#: ../eggs1.rst:119
msgid "Return to Dexterity: moving content types into code"
msgstr ""

#: ../eggs1.rst:121
msgid "Remember the *Talks* content type that we created through-the-web with Dexterity? Let's move that new content type into our add-on package so that it may be installed in other sites without TTW manipulation."
msgstr ""

#: ../eggs1.rst:123
msgid "Steps:"
msgstr ""

#: ../eggs1.rst:125
msgid "Return to the Dexterity control panel"
msgstr ""

#: ../eggs1.rst:126
msgid "Export the Type Profile and save the file"
msgstr ""

#: ../eggs1.rst:127
msgid "Delete the Type from the site before installing it from the file system"
msgstr ""

#: ../eggs1.rst:128
msgid "Extract the files from the exported tar-file and add them to our addon-package in ``ploneconf/site/profiles/default/``"
msgstr ""

#: ../eggs1.rst:130
msgid "The file ``ploneconf/site/profiles/default/types.xml`` tells plone that there is a new content type defined in file ``talk.xml``."
msgstr ""

#: ../eggs1.rst:141
msgid "Upon installing, Plone reads the file ``ploneconf/site/profiles/default/types/talk.xml`` and registers a new type in ``portal_types`` (you can find this tool in the ZMI) with the information taken from that file."
msgstr ""

#: ../eggs1.rst:239
msgid "Now our package has some real contents. So, we'll need to reinstall it (if installed before)."
msgstr ""

#: ../eggs1.rst:241
msgid "Restart Plone."
msgstr ""

#: ../eggs1.rst:242
msgid "Re-install ploneconf.site (deactivate and activate)."
msgstr ""

#: ../eggs1.rst:243
msgid "Go to the ZMI and look at the definition of the new type in ``portal_types``."
msgstr ""

#: ../eggs1.rst:244
msgid "Test the type by adding an object or editing one of the old ones."
msgstr ""

#: ../eggs1.rst:245
msgid "Look at how the talks are presented in the browser."
msgstr ""

