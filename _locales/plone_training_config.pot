# SOME DESCRIPTIVE TITLE.
# Copyright (C) The text and illustrations in this website are licensed by the Plone Foundation under a Creative Commons Attribution 4.0 International license.
# This file is distributed under the same license as the Mastering Plone package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Mastering Plone 1.2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-03-06 20:23-0430\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../plone_training_config/instructions.rst:2
msgid "Installing Plone for the Training"
msgstr ""

#: ../plone_training_config/instructions.rst:5
msgid "To not waste too much time with installing and debugging the differences between systems we use a virtual machine (Ubuntu 14.04) to run Plone during the training. We rely on Vagrant and VirtualBox to give the same development-environment to everyone."
msgstr ""

#: ../plone_training_config/instructions.rst:7
msgid "`Vagrant <http://www.vagrantup.com>`_ is a tool for building complete development environments. We use it together with Oracle’s `VirtualBox <https://www.virtualbox.org>`_ to create and manage a virtual environment."
msgstr ""

#: ../plone_training_config/instructions.rst:9
msgid "Keep in mind that you need a fast internet-connection during the process since you'll have to download a complete virtual machine (ubuntu) and several packages and updates."
msgstr ""

#: ../plone_training_config/instructions.rst:13
msgid "Installing Plone without vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:17
msgid "If you are **not** used to running Plone on your laptop skip this part and continue with :ref:`install-virtualbox`."
msgstr ""

#: ../plone_training_config/instructions.rst:19
msgid "If you **are** experienced with running Plone on your own laptop we encourage you to do so because you will have certain benefits:"
msgstr ""

#: ../plone_training_config/instructions.rst:21
msgid "You can use the editor you are used to."
msgstr ""

#: ../plone_training_config/instructions.rst:22
msgid "You can use omelette to have all the code of Plone at your fingertips."
msgstr ""

#: ../plone_training_config/instructions.rst:23
msgid "You do not have to switch between different operating-system during the training."
msgstr ""

#: ../plone_training_config/instructions.rst:25
msgid "If you feel comfortable please work on your own machine with your own Python but ** please ** make sure that you have a system that will work since we don't want you to lose valuable time."
msgstr ""

#: ../plone_training_config/instructions.rst:27
msgid "You will need to make a small change to the buildout we use during the training."
msgstr ""

#: ../plone_training_config/instructions.rst:29
msgid "Set up Plone for the training like this if you use your own OS (Linux or Mac):"
msgstr ""

#: ../plone_training_config/instructions.rst:39
msgid "Now you need to make a small change to the buildout. Open the file ``buildout.cfg`` in an editor and add a ``#`` at the beginning of line 25 where it says ``buildout_dir = /home/vagrant``. Then remove the ``#`` at the next line. It should now read:"
msgstr ""

#: ../plone_training_config/instructions.rst:45
msgid "Now you can run the buildout for the first time:"
msgstr ""

#: ../plone_training_config/instructions.rst:52
msgid "This will take some time and produce a lot of output because it downloads and configures Plone. Once it is done you can start you instance with"
msgstr ""

#: ../plone_training_config/instructions.rst:58
msgid "If the output should be similar to::"
msgstr ""

#: ../plone_training_config/instructions.rst:69
msgid "It the output says ``INFO Zope Ready to handle requests`` then you are up and running and can continue with the next chapter."
msgstr ""

#: ../plone_training_config/instructions.rst:73
msgid "If there is an error-message you should either try to fix it or use vagrant and continue in this chapter."
msgstr ""

#: ../plone_training_config/instructions.rst:79
msgid "Install VirtualBox"
msgstr ""

#: ../plone_training_config/instructions.rst:81
msgid "Vagrant uses Oracle’s VirtualBox to create virtual environments. Here is a link directly to the download page: https://www.virtualbox.org/wiki/Downloads. We use VirtualBox  4.3.x."
msgstr ""

#: ../plone_training_config/instructions.rst:85
msgid "Install and configure Vagrant"
msgstr ""

#: ../plone_training_config/instructions.rst:87
msgid "Get the latest version from http://www.vagrantup.com/downloads for your operating system and install it."
msgstr ""

#: ../plone_training_config/instructions.rst:91
msgid "In Windows there is a bug in the recent version of Vagrant. Here are the instruction how to work around the warning ``Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed``."
msgstr ""

#: ../plone_training_config/instructions.rst:93
msgid "Now your system has a command ``vagrant`` that you can run in the terminal."
msgstr ""

#: ../plone_training_config/instructions.rst:95
msgid "First create a directory where you want to do the training in."
msgstr ""

#: ../plone_training_config/instructions.rst:102
msgid "Setup Vagrant to automatically install the current guest-additions. You can choose to skip this step if you encounter any problems with it."
msgstr ""

#: ../plone_training_config/instructions.rst:108
msgid "Now either get the attached zip-file (if you read this as a mail) or download it from"
msgstr ""

#: ../plone_training_config/instructions.rst:110
msgid ":download:`http://plone-training.readthedocs.org/en/latest/_downloads/plone_training_config.zip <../plone_training_config.zip>`."
msgstr ""

#: ../plone_training_config/instructions.rst:112
msgid "and copy its contents into your training directory."
msgstr ""

#: ../plone_training_config/instructions.rst:119
msgid "The training-directory should now hold the file ``Vagrantfile`` and the directory ``manifests`` which again contains several files."
msgstr ""

#: ../plone_training_config/instructions.rst:121
msgid "Now start setting up the VM that is configured in ``Vagrantfile``:"
msgstr ""

#: ../plone_training_config/instructions.rst:127
msgid "This takes a **veeeeery loooong time** since it does all the following steps:"
msgstr ""

#: ../plone_training_config/instructions.rst:129
msgid "downloads a virtual machine (Official Ubuntu Server 14.04 LTS, also called \"Trusty Tahr\")"
msgstr ""

#: ../plone_training_config/instructions.rst:130
msgid "sets up the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:131
msgid "updates the VM"
msgstr ""

#: ../plone_training_config/instructions.rst:132
msgid "installs various packages needed for Plone development"
msgstr ""

#: ../plone_training_config/instructions.rst:133
msgid "downloads and unpack the unified installer for Plone"
msgstr ""

#: ../plone_training_config/instructions.rst:134
msgid "runs the unified installer for Plone."
msgstr ""

#: ../plone_training_config/instructions.rst:135
msgid "copy the eggs to a location we use in the training"
msgstr ""

#: ../plone_training_config/instructions.rst:136
msgid "clones the training-buildout into /vagrant/buildout"
msgstr ""

#: ../plone_training_config/instructions.rst:137
msgid "builds Plone using the eggs from the buildout-cache"
msgstr ""

#: ../plone_training_config/instructions.rst:141
msgid "Sometimes this stops with the message *Skipping because of failed dependencies*."
msgstr ""

#: ../plone_training_config/instructions.rst:147
msgid "If this happens or you have the feeling that something has gone wrong and the installation has not finished correctly for some reason you need to run try the following command to repeat the process. This will only repeat steps that have not finished correctly."
msgstr ""

#: ../plone_training_config/instructions.rst:153
msgid "You can do this multiple times to fix problems, e.g. if your network-connection was down and steps could not finish because of this."
msgstr ""

#: ../plone_training_config/instructions.rst:155
msgid "Once Vagrant finishes the provisioning-process, you can login to the now running virtual machine."
msgstr ""

#: ../plone_training_config/instructions.rst:163
msgid "If you use Windows you'll have to login with `putty <http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html>`_. Connect to vagrant@127.0.01 at port 2222. User **and** password are ``vagrant``."
msgstr ""

#: ../plone_training_config/instructions.rst:165
msgid "You are now logged in as the user vagrant in ``/home/vagrant``. We'll do all steps of the training as this user."
msgstr ""

#: ../plone_training_config/instructions.rst:167
msgid "We pre-installed a fresh Plone for you in the folder ``/home/vagrant/Plone/zinstance`` You can run it now and access it from the browser. We will **not** use this Plone-instance in the training, so you can play around with it as much as you want."
msgstr ""

#: ../plone_training_config/instructions.rst:169
msgid "Instead we use our own Plone-instance during the training. It is in ``/vagrant/buildout/``. Start it in foreground with ``./bin/instance fg``."
msgstr ""

#: ../plone_training_config/instructions.rst:184
msgid "In rare cases when you are using OSX with an UTF-8 character set starting Plone might fail with following error:"
msgstr ""

#: ../plone_training_config/instructions.rst:190
msgid "In that case you have to put the localized keyboard and language settings in the .bash_profile of the vagrant user."
msgstr ""

#: ../plone_training_config/instructions.rst:197
msgid "Now the Zope-instance we're using is running. You can stop the running instance anytime using ``ctrl + c``."
msgstr ""

#: ../plone_training_config/instructions.rst:199
msgid "If it doesn't, don't worry, your shell isn't blocked. Type reset (even if you can't see the prompt) and press RETURN, and it should become visible again."
msgstr ""

#: ../plone_training_config/instructions.rst:201
msgid "If you point your local browser at http://localhost:8080 you see that Plone is running in vagrant. This works because Virtualbox forwards the port 8080 from the guest-system (the vagrant-Ubuntu) to the host-system (your normal operating-system). Now create a new Plone site by clicking \"Create a new Plone site\". The username and the password are both \"admin\" (Never do this on a real site!)."
msgstr ""

#: ../plone_training_config/instructions.rst:203
msgid "The Buildout for this Plone is in a shared folder, this means we run it in the vagrant-box from ``/vagrant/buildout`` but we can also access it in out own operating-system and use our favorite editor. You will find the directory ``buildout`` in the directory ``training`` that you created in the very beginning next to ``Vagrantfile`` and ``manifests``."
msgstr ""

#: ../plone_training_config/instructions.rst:207
msgid "The database and the python-packages are not accessible in you own system since large files cannot make use of symlinks in shared folders. The database lies in ``/home/vagrant/var``, the python-packages are in ``/home/vagrant/packages``."
msgstr ""

#: ../plone_training_config/instructions.rst:209
msgid "If you have any problems or questions please mail us at team@starzel.de or create a ticket at https://github.com/plone/training/issues."
msgstr ""

#: ../plone_training_config/instructions.rst:213
#: ../plone_training_config/what_vagrant_does.rst:2
msgid "What Vagrant does"
msgstr ""

#: ../plone_training_config/instructions.rst:215
msgid "Installation is done automatically by vagrant and puppet. If you want to know which steps are actually done please see the chapter :doc:`what_vagrant_does`."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:6
msgid "These steps are automatically done by vagrant and puppet. They are only explained here if you want to know what goes on below the hood."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:8
msgid "Puppet does the first installation, Puppet is a tool to automatically manage servers (real and virtual). We won't get into Puppet since it is not that widely used. This is what we basically do if we did it by hand:"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:10
msgid "First we update the ubuntu and install some packages."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:32
msgid "Then we create a virtual python environment using virtualenv. This is alway a good practice since that way we get a clean copy of our system-python, we can't break it by installing eggs that might collide with other eggs::"
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:36
msgid "Then we download, unpack and install the unified installer of Plone."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:48
msgid "The unified installer is an amazing tool that compiles it's own python, brings with it all the python-eggs we need and puts them in a buildout-cache. It then creates a Buildout and makes Plone ready to run."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:50
msgid "We will not actually use this Plone during the training. If you want to use it for your own experiments, you can find it in ``/home/vagrant/Plone/zinstance`` on the virtual machine."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:52
msgid "Instead vagrant now creates our own little Buildout and only uses the eggs that the unified installer created. First we copy the buildout-cache that holds all the python-packages that Plone consists of."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:58
msgid "Then we checkout our tutorial buildout from http://github.com/collective/training_buildout and build it."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:68
msgid "At this point vagrant has finished it's job."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:70
msgid "You can now connect to the machine and start plone."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:78
msgid "Now we have fresh Buildout based Zope site, ready to get a Plone site. Go to http://localhost:8080 and create a Plone site, only activate the  :guilabel:`Dexterity-based Plone Default Types` plugin."
msgstr ""

#: ../plone_training_config/what_vagrant_does.rst:80
msgid "You might wonder, why we use the unified installer. We use the unified installer to set up a cache of packages to download in a much shorter time. Without it, your first Buildout on a fresh computer would take more than half an hour on a good internet connection."
msgstr ""

